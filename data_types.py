# Создание кортежей (tuples)
m = (1, 2, 3)  # Пример кортежа целых чисел
n = ("a", "b", "c")  # Пример кортежа строк
o = (1, "a", 3.14)  # Пример кортежа с различными типами данных

# Обращение к элементам кортежа
print(m[0])  # Вывод первого элемента (1)
print(n[1])  # Вывод второго элемента ("b")

# Кортежи неизменяемы, поэтому изменение элементов невозможно:
# m[0] = 10  # Это вызовет ошибку TypeError

# Перебор элементов кортежа
for item in o:
    print(item)  # Вывод всех элементов кортежа o

# Пример использования кортежей: координаты точек
point = (10, 20)  # Координаты точки (x, y)
print(f"Point coordinates: x={point[0]}, y={point[1]}")

# Интересное применение: функция с множеством возвращаемых значений
def get_coordinates():
    return (10, 20)

x, y = get_coordinates()
print(f"Coordinates: x={x}, y={y}")





# Создание множеств (sets)
p = {1, 2, 3, 4, 5}  # Пример множества целых чисел
q = {"apple", "banana", "cherry"}  # Пример множества строк

# Добавление элементов в множество
p.add(6)  # Теперь p = {1, 2, 3, 4, 5, 6}
q.add("date")  # Теперь q = {"apple", "banana", "cherry", "date"}

# Удаление элементов из множества
p.remove(3)  # Теперь p = {1, 2, 4, 5, 6}
q.discard("banana")  # Теперь q = {"apple", "cherry", "date"}

# Перебор элементов множества
for item in p:
    print(item)  # Вывод всех элементов множества p

# Пример использования множеств: удаление дубликатов
numbers = [1, 2, 2, 3, 4, 4, 5]
unique_numbers = set(numbers)
print(unique_numbers)  # Вывод: {1, 2, 3, 4, 5}

# Интересное применение: математические операции
a = {1, 2, 3}
b = {2, 3, 4}
print(a.union(b))  # Объединение: {1, 2, 3, 4}
print(a.intersection(b))  # Пересечение: {2, 3}
print(a.difference(b))  # Разность: {1}





# Создание словарей (dictionaries)
r = {"name": "John", "age": 30, "city": "New York"}  # Пример словаря с ключами и значениями

# Обращение к элементам словаря
print(r["name"])  # Вывод значения по ключу "name" ("John")

# Добавление и изменение элементов словаря
r["email"] = "john@example.com"  # Добавление нового элемента
r["age"] = 31  # Изменение значения по ключу "age"

# Удаление элементов из словаря
del r["city"]  # Удаление элемента по ключу "city"
email = r.pop("email")  # Удаление и возврат значения по ключу "email"

# Перебор элементов словаря
for key, value in r.items():
    print(f"{key}: {value}")  # Вывод всех пар "ключ-значение"

# Пример использования словарей: телефонная книга
phone_book = {
    "Alice": "+123456789",
    "Bob": "+987654321"
}
print(phone_book["Alice"])  # Вывод номера телефона Alice

# Интересное применение: подсчет частоты элементов
text = "hello world"
frequency = {}
for char in text:
    if char in frequency:
        frequency[char] += 1
    else:
        frequency[char] = 1
print(frequency)  # Вывод: {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}
